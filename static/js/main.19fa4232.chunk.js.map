{"version":3,"sources":["reducers/index.js","store.js","actions/actions.js","components/SearchBar.js","components/EpisodeReplaceBar.js","components/EpisodeContainer.js","components/MainContainer.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","isLoading","error","replacementError","show","showImage","genres","summary","seasons","episodes","getCleanSummaryStringMax700chars","length","replace","substring","getListOfSeasons","map","episode","season","filter","index","indexOf","replaceEpisodeInState","newEpisode","episodeArray","episodeToBeReplacedIndex","findIndex","number","store","createStore","state","action","type","payload","image","medium","_embedded","base_url","SearchBar","useState","showSearched","setShowSearched","useEffect","randomShowId","Math","floor","random","getRandomShowUrl","dispatch","Axios","get","then","resp","data","catch","err","searchRandomShow","w","p","mb","bg","text","display","justifyContent","alignItems","style","marginRight","onSubmit","e","preventDefault","getIdUrl","id","showId","getShowDetailsAndEpisodesUrl","searchShow","Input","placeholder","onChange","target","value","Append","secondary","EpisodeReplaceBar","useSelector","appstate","selectedSeason","setSelectedSeason","selectedEpisode","setSelectedEpisode","replaceBy","setReplaceBy","handleReplace","console","log","episodeNumber","replaceEpisode","parseInt","mt","Group","mr","Select","setSeason","i","setEpisode","px","dark","EpisodeContainer","getFormatedDate","date","dayjs","format","danger","pb","borderBottom","mx","airdate","j","my","src","className","height","width","fontSize","ml","MainContainer","m","overflow","alt","styles","maxWidth","name","py","join","premiered","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19fa4232.chunk.js","sourcesContent":["const initialState = {\n  isLoading: false,\n  error: '',\n  replacementError: false,\n  show: {},\n  showImage: '',\n  genres: [],\n  summary: '',\n  seasons: [],\n  episodes: []\n}\n\nfunction getCleanSummaryStringMax700chars(summary) {\n  if(summary) {\n    if(summary.length > 700) {\n      return summary.replace( /(<([^>]+)>)/ig, '').substring(0, 700) + '...'\n    }\n    return summary.replace( /(<([^>]+)>)/ig, '');\n  } else return ''\n}\n\nfunction getListOfSeasons(episodes) {\n  const seasons = episodes.map(episode => {\n    return episode.season\n  });\n  \n  const filteredSeasons = seasons.filter((season, index) => {  \n      return seasons.indexOf(season) === index;\n    });\n    \n  return filteredSeasons\n}\n\nfunction replaceEpisodeInState(newEpisode, episodeArray) {\n  let episodeToBeReplacedIndex = episodeArray.findIndex(episode => {\n    if (episode.season === newEpisode.season && episode.number === newEpisode.number) {\n      return true;\n    } return false\n  })\n  \n  episodeArray[episodeToBeReplacedIndex] = newEpisode;\n\n  return episodeArray\n  \n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n      case 'REQUEST_INITIATED':\n        return { ...state, error: '',\n          isLoading: true\n        }\n      case 'GET_SHOW_SUCCESS':\n          return { ...state, error: '',\n            isLoading: false,\n            show: action.payload, \n            showImage: action.payload.image ? action.payload.image.medium : '',\n            genres: action.payload.genres,\n            summary: getCleanSummaryStringMax700chars(action.payload.summary),\n            seasons: getListOfSeasons(action.payload._embedded.episodes),\n            episodes: action.payload._embedded.episodes\n        }\n      case 'GET_SHOW_ERROR':\n          return { ...state,\n            error: action.payload\n          }\n      case 'GET_REPLACED_EPISODE_SUCCESS':\n          return {...state, error: '',\n            isLoading: false,\n            replacementError: false,\n            episodes: replaceEpisodeInState(action.payload, state.episodes)\n        }\n      case 'GET_REPLACED_EPISODE_ERROR':\n        return {...state, error: '',\n          isLoading: false,\n          replacementError: true,\n        }\n      default:\n          return state\n}\n}","import { createStore } from 'redux'\n\nimport reducer from './reducers/'\n\nconst store = createStore(reducer)\n\nexport default store","import store from '../store'\nimport Axios from 'axios'\n\nconst base_url = 'https://api.tvmaze.com';\n\nexport function searchRandomShow() {\n  const randomShowId = Math.floor(Math.random() * 55535) + 1\n  const getRandomShowUrl = `${base_url}/shows/${randomShowId}?embed=episodes`;\n\n  store.dispatch({type: 'REQUEST_INITIATED'})\n\n  Axios.get(getRandomShowUrl)\n    .then(resp => {\n      store.dispatch({\n        type: 'GET_SHOW_SUCCESS',\n        payload: resp.data\n      })\n    })\n  .catch(err => {\n      store.dispatch({\n          type: 'GET_SHOW_ERROR',\n          payload: err\n      })\n  })\n}\n\nexport function searchShow(show) {\n  const getIdUrl = `${base_url}/search/shows?q=${show}`;\n\n  store.dispatch({type: 'REQUEST_INITIATED'})\n\n  Axios.get(getIdUrl)\n    .then(resp => {\n        const showId = resp.data[0].show.id\n        return showId\n    })\n    .then(showId => {\n      const getShowDetailsAndEpisodesUrl = `${base_url}/shows/${showId}?embed=episodes`;\n\n      Axios.get(getShowDetailsAndEpisodesUrl)\n        .then(resp => {\n          store.dispatch({\n            type: 'GET_SHOW_SUCCESS',\n            payload: resp.data\n          })\n        })\n    })\n    .catch(err => {\n        store.dispatch({\n            type: 'GET_SHOW_ERROR',\n            payload: err\n        })\n    })\n}\n\nexport function replaceEpisode(show, season, episodeNumber) {\n  const getShowDetailsAndEpisodesUrl = `${base_url}/singlesearch/shows?q=${show}&embed=episodes`;\n\n  store.dispatch({type: 'REQUEST_INITIATED'})\n\n  Axios.get(getShowDetailsAndEpisodesUrl)\n    .then(resp => {\n        store.dispatch({\n          type: 'GET_REPLACED_EPISODE_SUCCESS',\n          payload: resp.data._embedded.episodes.filter(episode => episode.season === season && episode.number === episodeNumber)[0]          \n        }) \n    })\n    .catch(err => {\n      store.dispatch({\n          type: 'GET_REPLACED_EPISODE_ERROR'\n      })\n  })\n}","import React, { useState, useEffect } from 'react'\nimport { BDiv, InputGroup, Form, Button } from 'bootstrap-4-react';\nimport { searchShow, searchRandomShow } from '../actions/actions'\n\nconst SearchBar = () => {\n\n  const [showSearched, setShowSearched] = useState('')\n\n  useEffect(() => {\n    searchRandomShow()\n  }, [])\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    searchShow(showSearched);\n    setShowSearched('');\n  }\n\n    return (\n          <BDiv\n             w=\"100\"\n             p=\"3\"\n             mb=\"1\"\n             bg=\"dark\"\n             text=\"white\"\n             display=\"flex\"\n             justifyContent=\"center\"\n             alignItems=\"center\"\n          >\n            <h2 style={{marginRight: '10em'}}>\n              Episode Switcher\n            </h2>\n            <Form w=\"20\" onSubmit={handleSubmit}>\n              <InputGroup>\n                <Form.Input\n                  type=\"text\"\n                  placeholder=\"Enter a TV show\"\n                  onChange={e => setShowSearched(e.target.value)}\n                  value={showSearched}\n                />\n                  <InputGroup.Append>\n                    <Button type=\"submit\" secondary>\n                      Search\n                    </Button>\n                  </InputGroup.Append>\n              </InputGroup>\n            </Form>\n          </BDiv>              \n    )\n}\n\nexport default SearchBar;","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { BDiv, Form, Button, InputGroup } from 'bootstrap-4-react';\nimport { replaceEpisode } from '../actions/actions'\n\nconst EpisodeReplaceBar = () => {\n\n  const seasons = useSelector(appstate => appstate.seasons)\n  const episodes = useSelector(appstate => appstate.episodes)\n\n  const [selectedSeason, setSelectedSeason] = useState(1)\n  const [selectedEpisode, setSelectedEpisode] = useState(1)\n  const [replaceBy, setReplaceBy] = useState('')\n\n  function setSeason(e) {\n    console.log(e.target.value)\n    setSelectedSeason(parseInt(e.target.value));\n  }\n\n  function setEpisode(e) {\n    setSelectedEpisode(e.target.value);\n  }\n\n  function handleReplace(e) {\n    e.preventDefault();\n    console.log(replaceBy, selectedSeason, selectedEpisode)\n    replaceEpisode(replaceBy, parseInt(selectedSeason), parseInt(selectedEpisode), episodes);\n\n  }\n\n    return (\n                    <BDiv\n                       w=\"80\"\n                       mt=\"5\"\n                       mb=\"4\"\n                       display=\"flex\"\n                       justifyContent=\"between\"\n                       alignItems=\"center\"\n                    >\n                      Replace\n                      <Form display=\"flex\" mb=\"0\">\n                      <Form.Group mr=\"4\" mb=\"0\">\n                          <Form.Select\n                          onChange={e => setSeason(e)}>\n                            {seasons.map((season,i) =>\n                              <option key={i} value={i+1}>Season {season}</option>\n                            )}\n                          </Form.Select>\n                        </Form.Group>\n                        <Form.Group mb=\"0\">\n                          <Form.Select onChange={e => setEpisode(e)}>\n                            {episodes\n                              .filter(episode => episode.season === parseInt(selectedSeason))\n                              .map((episode, i) => \n                                <option key={i} value={i+1}>Episode {episode.number}</option>\n                              )} \n                          </Form.Select> \n                        </Form.Group>\n                      </Form>\n                      with\n                      <Form w=\"50\" display=\"flex\"\n                      onSubmit={e => handleReplace(e)}\n                      >\n                        <InputGroup>\n                          <Form.Input\n                            mr=\"4\"\n                            type=\"text\" \n                            onChange={e => setReplaceBy(e.target.value)} \n                            value={replaceBy}\n                          />\n                            <Button\n                              px=\"5\" \n                              type=\"submit\" dark\n                            >\n                              Replace\n                            </Button>\n                        </InputGroup>\n                      </Form>\n                     \n                    </BDiv>\n    )\n}\n\nexport default EpisodeReplaceBar;","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { Alert, BDiv, BP, BImg, BSpan } from 'bootstrap-4-react';\nimport * as dayjs from 'dayjs'\n\nconst EpisodeContainer = () => {\n\n  const replacementError = useSelector(appstate => appstate.replacementError)\n  const seasons = useSelector(appstate => appstate.seasons)\n  const episodes = useSelector(appstate => appstate.episodes)\n\n  function getFormatedDate(date) {\n    return dayjs(date).format('MMM D, YYYY')\n  }\n\n  function getCleanSummaryStringMax270chars(summary) {\n    if(summary) {\n      if(summary.length > 270) {\n        return summary.replace( /(<([^>]+)>)/ig, '').substring(0, 270) + '...'\n      }\n      return summary.replace( /(<([^>]+)>)/ig, '');\n    } else return ''\n  }\n\n    return (\n      <BDiv>\n        {replacementError ? <Alert danger>There is no matching record for the episode, season and show provided.</Alert> : ''}\n        {seasons.map((season,i) =>\n          <BDiv key={i} value={i+1}>\n            <h3>Season {season}</h3>\n            <BDiv display=\"flex\" pb=\"2\" style={{borderBottom: '1px solid #dee2e6'}}>\n              <BP text=\"secondary\" display=\"flex\" mb=\"0\">\n                {episodes && episodes.filter(episode => episode.season === i+1).length}\n                <BSpan mx=\"1\"> Episodes</BSpan>\n                {episodes && episodes.filter(episode => episode.season === i+1)[0] && episodes.filter(episode => episode.season === i+1)[0].airdate ? ` | Aired on ${getFormatedDate(episodes.filter(episode => episode.season === i+1)[0].airdate)}` : ''}\n              </BP>\n            </BDiv>\n            {episodes\n              .filter(episode => episode.season === i+1)\n              .map((episode, j) => \n                <BDiv key={j} value={j+1} display=\"flex\" my=\"4\" >\n                  {\n                    episode.image && episode.image.medium\n                  ?\n                    <BImg src={episode.image.medium}/>\n                  :\n                    <BDiv\n                      className=\"text-white bg-secondary\"\n                      style={{height: '150px', width: '250px', fontSize: '30px'}}\n                      display=\"flex\"\n                      justifyContent=\"center\"\n                      alignItems=\"center\"\n                    >\n                      <BP>\n                        NA\n                      </BP>\n                    </BDiv>\n                  }\n                  <BDiv ml=\"4\">\n                    <h5>\n                      Episode {episode.number}\n                    </h5>\n                    <BDiv display=\"flex\">\n                      <BP text=\"secondary\">\n                        {`Season ${i+1} | `}\n                        Episode {episode.number}\n                        {episode.airdate ? ` | ${getFormatedDate(episode.airdate)}` : ''}\n                      </BP>\n                    </BDiv>\n                    <BP mb=\"0\"style={{fontSize: '15px'}}>\n                      {episode.summary ? getCleanSummaryStringMax270chars(episode.summary) : ''}\n                    </BP>\n                  </BDiv>\n                </BDiv>\n              )}\n          </BDiv>\n        )}\n      </BDiv>             \n    )\n}\n\nexport default EpisodeContainer;","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { Alert, BDiv, BP, BImg } from 'bootstrap-4-react';\nimport * as dayjs from 'dayjs'\nimport EpisodeReplaceBar from './EpisodeReplaceBar'\nimport EpisodeContainer from './EpisodeContainer'\n\nconst MainContainer = () => {\n\n  const isLoading = useSelector(appstate => appstate.isLoading)\n  const error = useSelector(appstate => appstate.error)\n  const show = useSelector(appstate => appstate.show)\n  const showImage = useSelector(appstate => appstate.showImage)\n  const genres = useSelector(appstate => appstate.genres)\n  const summary = useSelector(appstate => appstate.summary)\n\n  function getFormatedDate(date) {\n    return dayjs(date).format('MMM D, YYYY')\n  }\n\n    return (\n      <BDiv>\n      {error ? <Alert danger>Error loading show information.</Alert> : ''}\n\n      {!isLoading ? \n        <BDiv\n          className='MainContainer'\n          w=\"50\"\n          m=\"auto\"\n        >\n         <BDiv\n            display=\"flex\"\n            justifyContent=\"start\"\n            style={{'marginTop': '50px', height: '300px', overflow: 'hidden'}}\n            w=\"100\"\n         >\n           {\n             showImage\n           ?\n             <BImg src={showImage} alt=\"na\" styles={{maxWidth: '25%'}}/>                                       \n           :\n             <BDiv\n              className=\"text-white bg-secondary\"\n              style={{height: '100%', width: '100%', fontSize: '30px'}}\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n               NA\n            </BDiv>\n           }\n\n           <BDiv\n             style={{'marginLeft': '20px'}}\n           >\n             <h2>\n               {show.name}\n             </h2>\n             <BDiv\n               display=\"flex\"\n               py=\"1\"\n             >\n               <BP text=\"secondary\">\n                 {genres.join(', ')}\n                 {genres.length && show.premiered ? ' | ' : ''}\n                 {show.premiered ? `Premiered on ${getFormatedDate(show.premiered)}` : ''}\n               </BP>\n             </BDiv>\n             <BDiv\n             mt=\"3\"\n             >     \n              {summary}\n             </BDiv>\n           </BDiv>\n           \n         </BDiv>\n         <EpisodeReplaceBar/>\n         <EpisodeContainer/>        \n        </BDiv>\n        : ''}\n      </BDiv>\n    )\n}\n\nexport default MainContainer;","import { Provider } from 'react-redux'\nimport SearchBar from './components/SearchBar'\nimport MainContainer from './components/MainContainer'\nimport store from './store'\n\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n          <SearchBar />\n          <MainContainer />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}